package com.example.demo;

import java.util.concurrent.atomic.AtomicLong;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.DeleteMapping;

@RestController
public class CategoryRestController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CategoryRepository categoryRepository;



    //helloworld
    @GetMapping("/helloworld")
    public String helloworld() {
        return "Hello World";
    }

    //Get Category
    //@RequestParam(value = "id") Integer id
    @GetMapping("/Category")
    public @ResponseBody Iterable<Category> getCategory() {
        return categoryRepository.findAll();
    }

    //Post Category
    //curl http://localhost:8080/Category -d name=First
    @PostMapping(path="/Category") // Map ONLY POST Requests
    public @ResponseBody String addNewCategory (@RequestParam String name) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Category n = new Category();
        n.setName(name);
        categoryRepository.save(n);
        return "Saved";
    }

    //Delete Category
    @DeleteMapping("/Category")
    public @ResponseBody String deleteCategory (@RequestParam Integer id) {
        categoryRepository.deleteById(id);
        return "Deleted";
    }




}