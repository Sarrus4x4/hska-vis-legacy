apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: monolith
  name: monolith
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: monolith
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: monolith
    spec:
      containers:
        - image: {{ .Values.image.name }}{{ ":" }}{{ .Values.image.tag }}
          name: categories
          env:
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: monolith-database-config
                  key: MYSQL_HOST
            - name: MONOLITH_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: monolith-database-config
                  key: MONOLITH_DB_USER
            - name: MONOLITH_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: monolith-database-config
                  key: MONOLITH_DB_NAME
            - name: MONOLITH_DB_PWD
              valueFrom:
                secretKeyRef:
                  name: monolith-credentials
                  key: MONOLITH_DB_PASSWORD
            - name: PRODUCTS_HOST
              valueFrom:
                configMapKeyRef:
                  name: monolith-products-config
                  key: HOST
            - name: CATEGORIES_HOST
              valueFrom:
                configMapKeyRef:
                  name: monolith-categories-config
                  key: CATEGORIES_HOST
          ports:
          - containerPort: 8080
          resources: {}
      restartPolicy: Always
